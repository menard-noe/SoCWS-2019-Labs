//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web_Client.IntermediaryDecaux {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IntermediaryDecaux.IIntermediaryDecaux")]
    public interface IIntermediaryDecaux {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntermediaryDecaux/GetCities", ReplyAction="http://tempuri.org/IIntermediaryDecaux/GetCitiesResponse")]
        string GetCities(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntermediaryDecaux/GetCities", ReplyAction="http://tempuri.org/IIntermediaryDecaux/GetCitiesResponse")]
        System.Threading.Tasks.Task<string> GetCitiesAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntermediaryDecaux/GetStationsInfoCity", ReplyAction="http://tempuri.org/IIntermediaryDecaux/GetStationsInfoCityResponse")]
        string GetStationsInfoCity(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntermediaryDecaux/GetStationsInfoCity", ReplyAction="http://tempuri.org/IIntermediaryDecaux/GetStationsInfoCityResponse")]
        System.Threading.Tasks.Task<string> GetStationsInfoCityAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntermediaryDecaux/FindStation", ReplyAction="http://tempuri.org/IIntermediaryDecaux/FindStationResponse")]
        double[] FindStation(string depart, string arrive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntermediaryDecaux/FindStation", ReplyAction="http://tempuri.org/IIntermediaryDecaux/FindStationResponse")]
        System.Threading.Tasks.Task<double[]> FindStationAsync(string depart, string arrive);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIntermediaryDecauxChannel : Web_Client.IntermediaryDecaux.IIntermediaryDecaux, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IntermediaryDecauxClient : System.ServiceModel.ClientBase<Web_Client.IntermediaryDecaux.IIntermediaryDecaux>, Web_Client.IntermediaryDecaux.IIntermediaryDecaux {
        
        public IntermediaryDecauxClient() {
        }
        
        public IntermediaryDecauxClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IntermediaryDecauxClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IntermediaryDecauxClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IntermediaryDecauxClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetCities(int value) {
            return base.Channel.GetCities(value);
        }
        
        public System.Threading.Tasks.Task<string> GetCitiesAsync(int value) {
            return base.Channel.GetCitiesAsync(value);
        }
        
        public string GetStationsInfoCity(int value) {
            return base.Channel.GetStationsInfoCity(value);
        }
        
        public System.Threading.Tasks.Task<string> GetStationsInfoCityAsync(int value) {
            return base.Channel.GetStationsInfoCityAsync(value);
        }
        
        public double[] FindStation(string depart, string arrive) {
            return base.Channel.FindStation(depart, arrive);
        }
        
        public System.Threading.Tasks.Task<double[]> FindStationAsync(string depart, string arrive) {
            return base.Channel.FindStationAsync(depart, arrive);
        }
    }
}
